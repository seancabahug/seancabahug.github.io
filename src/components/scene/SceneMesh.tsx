/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    nametag_Baked_1: THREE.Mesh
    water_bottle_Baked_1: THREE.Mesh
    poster_Baked_1: THREE.Mesh
    poster_2_Baked_1: THREE.Mesh
    firstmonitorscreen_Baked_1: THREE.Mesh
    MechKeyboard_01_Baked_1: THREE.Mesh
    table_backlight_Baked_1: THREE.Mesh
    table_backlight001_Baked_1: THREE.Mesh
    mousepad_Baked_1: THREE.Mesh
    code_led_Baked_1: THREE.Mesh
    lamp_Baked_1: THREE.Mesh
    monitor_Baked_1: THREE.Mesh
    mouse_Baked_1: THREE.Mesh
    table_backlight002_Baked_1: THREE.Mesh
    pencil_Baked_1: THREE.Mesh
    plant_Baked_1: THREE.Mesh
    pencil001_Baked_1: THREE.Mesh
    table_Baked_1: THREE.Mesh
    walls_Baked_1: THREE.Mesh
  }
  materials: {
    nametag_Baked: THREE.MeshStandardMaterial
    ['water bottle_Baked.009']: THREE.MeshStandardMaterial
    poster_Baked: THREE.MeshStandardMaterial
    ['poster 2_Baked']: THREE.MeshStandardMaterial
    firstmonitorscreen_Baked: THREE.MeshStandardMaterial
    MechKeyboard_01_Baked: THREE.MeshStandardMaterial
    ['table backlight_Baked.009']: THREE.MeshStandardMaterial
    mousepad_Baked: THREE.MeshStandardMaterial
    ['code led_Baked']: THREE.MeshStandardMaterial
    lamp_Baked: THREE.MeshStandardMaterial
    monitor_Baked: THREE.MeshStandardMaterial
    mouse_Baked: THREE.MeshStandardMaterial
    ['table backlight.002_Baked.009']: THREE.MeshStandardMaterial
    pencil_Baked: THREE.MeshStandardMaterial
    plant_Baked: THREE.MeshStandardMaterial
    ['pencil.001_Baked']: THREE.MeshStandardMaterial
    ['table_Baked.009']: THREE.MeshStandardMaterial
    ['walls_Baked.009']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scene.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.nametag_Baked_1.geometry} material={materials.nametag_Baked} position={[-1.043, 0.71, -1.203]} rotation={[0.166, -0.746, 0.113]} scale={[0.095, 0.078, 0.095]} />
      <mesh geometry={nodes.water_bottle_Baked_1.geometry} material={materials['water bottle_Baked.009']} position={[-1.032, 0.325, -1.208]} rotation={[Math.PI, -1.293, Math.PI]} scale={[0.139, 0.266, 0.139]} />
      <mesh geometry={nodes.poster_Baked_1.geometry} material={materials.poster_Baked} position={[0.683, 1.407, 3.31]} rotation={[Math.PI / 2, -0.116, Math.PI]} scale={[0.551, 0.551, 0.816]} />
      <mesh geometry={nodes.poster_2_Baked_1.geometry} material={materials['poster 2_Baked']} position={[-0.198, 1.05, 3.306]} rotation={[Math.PI / 2, 0.071, -Math.PI]} scale={[0.433, 0.676, 0.676]} />
      <mesh geometry={nodes.MechKeyboard_01_Baked_1.geometry} material={materials.MechKeyboard_01_Baked} position={[-0.902, 0.057, -0.354]} rotation={[Math.PI / 2, 0, 1.781]} scale={0.032} />
      <mesh geometry={nodes.table_backlight_Baked_1.geometry} material={materials['table backlight_Baked.009']} position={[1.888, 0.032, 0.006]} rotation={[0, 0, -Math.PI / 2]} scale={[0.02, 1, 2.828]} />
      <mesh geometry={nodes.table_backlight001_Baked_1.geometry} material={materials['table backlight_Baked.009']} position={[-0.03, 0.037, 3.162]} rotation={[-Math.PI / 2, Math.PI / 2, 0]} scale={[0.02, 1, 1.7]} />
      <mesh geometry={nodes.mousepad_Baked_1.geometry} material={materials.mousepad_Baked} position={[-0.897, 0.063, 0.969]} rotation={[0, 0.091, 0]} scale={0.414} />
      <mesh geometry={nodes.code_led_Baked_1.geometry} material={materials['code led_Baked']} position={[1.886, 2.318, -0.112]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={2.662} />
      <mesh geometry={nodes.lamp_Baked_1.geometry} material={materials.lamp_Baked} position={[0.818, 0.084, -1.789]} rotation={[0, -0.129, 0]} scale={[0.268, 0.034, 0.268]} />
      <mesh geometry={nodes.monitor_Baked_1.geometry} material={materials.monitor_Baked} position={[2.198, 1.157, 0.192]} scale={0.376} />
      <mesh geometry={nodes.mouse_Baked_1.geometry} material={materials.mouse_Baked} position={[-0.876, 0.176, 0.982]} rotation={[0, 0.362, 0]} scale={[0.147, 0.117, 0.092]} />
      <mesh geometry={nodes.table_backlight002_Baked_1.geometry} material={materials['table backlight.002_Baked.009']} position={[1.837, 0.041, 3.056]} rotation={[-Math.PI, 0.759, Math.PI / 2]} scale={[0.017, 0.076, 0.129]} />
      <mesh geometry={nodes.pencil_Baked_1.geometry} material={materials.pencil_Baked} position={[-0.536, 0.069, -1.1]} rotation={[0, 0.289, 0]} scale={0.094} />
      <mesh geometry={nodes.plant_Baked_1.geometry} material={materials.plant_Baked} position={[0.823, 0.356, 2.179]} rotation={[Math.PI / 2, 0, -2.468]} scale={0.026} />
      <mesh geometry={nodes.pencil001_Baked_1.geometry} material={materials['pencil.001_Baked']} position={[-0.536, 0.069, -1.1]} rotation={[0, 0.289, 0]} scale={0.094} />
      <mesh geometry={nodes.table_Baked_1.geometry} material={materials['table_Baked.009']} position={[-0.023, 0.036, 0.008]} scale={0.062} />
      <mesh geometry={nodes.walls_Baked_1.geometry} material={materials['walls_Baked.009']} position={[2, 1.826, 3.308]} rotation={[0, 0, -Math.PI / 2]} />
    </group>
  )
}

useGLTF.preload('/scene.glb')
